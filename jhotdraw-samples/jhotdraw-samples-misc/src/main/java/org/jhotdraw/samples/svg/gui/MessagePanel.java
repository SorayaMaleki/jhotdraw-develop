/*
 * @(#)MessagePanel.java
 *
 * Copyright (c) 2007 The authors and contributors of JHotDraw.
 * You may not use, copy or modify this file, except in compliance with the
 * accompanying license terms.
 */
package org.jhotdraw.samples.svg.gui;

import org.jhotdraw.util.ResourceBundleUtil;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * MessagePanel.
 * <p>
 * The MessagePanel covers the whole content pane of the DrawingApplet.
 * The DrawingApplet registers with the DrawingComponent as an
 * ActionListener to receive "save" and "cancel" action
 * commands.
 *
 * @author Werner Randelshofer
 * @version $Id$
 */
public class MessagePanel extends JPanel {
    private MessagePanelProduct messagePanelProduct = new MessagePanelProduct();

    private static final long serialVersionUID = 1L;
    private ResourceBundleUtil labels;

    /**
     * Creates new instance.
     */
    public MessagePanel() {
        this(null, null);
    }

    public MessagePanel(Icon icon, String message) {
        labels = ResourceBundleUtil.getBundle("org.jhotdraw.samples.svg.Labels");
        initComponents();
        setIcon(icon);
        setMessage(message);
    }

    public void setMessage(String message) {
        messageLabel.setText(message);
    }

    public void setIcon(Icon icon) {
        iconLabel.setIcon(icon);
    }

    public void addActionListener(ActionListener listener) {
        messagePanelProduct.addActionListener(listener);
    }

    public void removeActionListener(ActionListener listener) {
        messagePanelProduct.removeActionListener(listener);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;
        iconLabel = new JLabel();
        messageLabel = new JLabel();
        closeButton = new JButton();
        setBackground(new Color(255, 255, 255));
        setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        setLayout(new GridBagLayout());
        add(iconLabel, new GridBagConstraints());
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(0, 10, 0, 0);
        add(messageLabel, gridBagConstraints);
        closeButton.setText(labels.getString("messagePanel.close.text")); // NOI18N
        closeButton.setActionCommand("close");
        closeButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                messagePanelProduct.closePerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new Insets(10, 10, 0, 0);
        add(closeButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton closeButton;
    private JLabel iconLabel;
    private JLabel messageLabel;
    // End of variables declaration//GEN-END:variables
}
