/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Jun 05 09:40:19 GMT 2021
 */

package org.jhotdraw.gui;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class ToolBarLayout_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.jhotdraw.gui.ToolBarLayout"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.OFF; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ToolBarLayout_ESTest_scaffolding.class.getClassLoader() ,
      "org.jhotdraw.color.AbstractNamedColorSpace",
      "org.jhotdraw.color.ColorSliderModel",
      "org.jhotdraw.color.PolarColorWheelImageProducer",
      "org.jhotdraw.color.ColorUtil",
      "org.jhotdraw.color.HSBColorSpace",
      "org.jhotdraw.color.ColorWheelChooser",
      "org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon",
      "org.jhotdraw.color.DiskColorWheelImageProducer",
      "org.jhotdraw.util.Images",
      "org.jhotdraw.beans.AbstractBean",
      "org.jhotdraw.gui.plaf.palette.MultiIcon",
      "org.jhotdraw.color.ColorTrackImageProducer",
      "org.jhotdraw.color.DefaultColorSliderModel",
      "org.jhotdraw.color.JColorWheel$MouseHandler",
      "org.jhotdraw.color.ColorWheelChooser$1",
      "org.jhotdraw.color.ColorSliderUI",
      "org.jhotdraw.gui.Axis",
      "org.jhotdraw.color.DefaultColorSliderModel$1",
      "org.jhotdraw.util.prefs.ToolBarPrefsHandler",
      "org.jhotdraw.color.ComplexColorWheelImageProducer",
      "org.jhotdraw.color.JColorWheel",
      "org.jhotdraw.gui.XAxis",
      "org.jhotdraw.color.JColorWheel$ModelHandler",
      "org.jhotdraw.color.JColorWheel$Type",
      "org.jhotdraw.gui.ToolBarLayout",
      "org.jhotdraw.color.ColorSquareImageProducer",
      "org.jhotdraw.gui.YAxis",
      "org.jhotdraw.color.JColorWheel$1",
      "org.jhotdraw.color.CompositeColor",
      "org.jhotdraw.color.ColorSliderUI$CSUIPropertyChangeHandler",
      "org.jhotdraw.color.ColorSliderUI$TrackListener",
      "org.jhotdraw.color.AbstractColorWheelImageProducer",
      "org.jhotdraw.color.NamedColorSpace",
      "org.jhotdraw.color.AbstractColorSlidersModel"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ToolBarLayout_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.jhotdraw.gui.ToolBarLayout",
      "org.jhotdraw.gui.Axis",
      "org.jhotdraw.gui.XAxis",
      "org.jhotdraw.gui.YAxis",
      "org.jhotdraw.color.ColorWheelChooser",
      "org.jhotdraw.beans.AbstractBean",
      "org.jhotdraw.color.AbstractColorSlidersModel",
      "org.jhotdraw.color.DefaultColorSliderModel",
      "org.jhotdraw.color.AbstractNamedColorSpace",
      "org.jhotdraw.color.HSBColorSpace",
      "org.jhotdraw.color.DefaultColorSliderModel$1",
      "org.jhotdraw.color.JColorWheel",
      "org.jhotdraw.color.JColorWheel$Type",
      "org.jhotdraw.color.JColorWheel$1",
      "org.jhotdraw.color.AbstractColorWheelImageProducer",
      "org.jhotdraw.color.PolarColorWheelImageProducer",
      "org.jhotdraw.color.JColorWheel$ModelHandler",
      "org.jhotdraw.color.JColorWheel$MouseHandler",
      "org.jhotdraw.color.ColorSliderUI",
      "org.jhotdraw.gui.plaf.palette.MultiIcon",
      "org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon",
      "org.jhotdraw.util.Images",
      "org.jhotdraw.color.ColorSliderUI$TrackListener",
      "org.jhotdraw.color.ColorSliderUI$CSUIPropertyChangeHandler",
      "org.jhotdraw.color.ColorWheelChooser$1",
      "org.jhotdraw.util.prefs.ToolBarPrefsHandler",
      "org.jhotdraw.color.ColorUtil",
      "org.jhotdraw.color.CompositeColor"
    );
  }
}
