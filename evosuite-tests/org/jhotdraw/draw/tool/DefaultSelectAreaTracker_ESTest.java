/*
 * This file was automatically generated by EvoSuite
 * Sat May 29 15:48:52 GMT 2021
 */

package org.jhotdraw.draw.tool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Container;
import java.awt.Graphics2D;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.image.BufferedImage;
import java.util.LinkedHashSet;
import java.util.List;
import javax.swing.JLayer;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.text.DefaultStyledDocument;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jhotdraw.draw.DefaultDrawing;
import org.jhotdraw.draw.DefaultDrawingEditor;
import org.jhotdraw.draw.DefaultDrawingView;
import org.jhotdraw.draw.Drawing;
import org.jhotdraw.draw.DrawingEditor;
import org.jhotdraw.draw.DrawingEditorProxy;
import org.jhotdraw.draw.QuadTreeDrawing;
import org.jhotdraw.draw.figure.DiamondFigure;
import org.jhotdraw.draw.figure.Figure;
import org.jhotdraw.draw.figure.LabelFigure;
import org.jhotdraw.draw.figure.LabeledLineConnectionFigure;
import org.jhotdraw.draw.figure.RoundRectangleFigure;
import org.jhotdraw.draw.handle.CloseHandle;
import org.jhotdraw.draw.io.ImageOutputFormat;
import org.jhotdraw.draw.tool.DefaultSelectAreaTracker;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultSelectAreaTracker_ESTest extends DefaultSelectAreaTracker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      DrawingEditorProxy drawingEditorProxy0 = new DrawingEditorProxy();
      defaultSelectAreaTracker0.deactivate(drawingEditorProxy0);
      assertFalse(defaultSelectAreaTracker0.isActive());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      JLayer<Container> jLayer0 = new JLayer<Container>();
      JPanel jPanel0 = jLayer0.createGlassPane();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jPanel0, (-346), 0L, 1735, (-346), 2133, 1735, 2133, 1735, false, 1735, 0, 1735, (-346));
      DefaultDrawingEditor defaultDrawingEditor0 = new DefaultDrawingEditor();
      defaultSelectAreaTracker0.activate(defaultDrawingEditor0);
      // Undeclared exception!
      try { 
        defaultSelectAreaTracker0.mouseMoved(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      JLayer<Container> jLayer0 = new JLayer<Container>((Container) null);
      JPanel jPanel0 = jLayer0.createGlassPane();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jPanel0, (-346), 0L, 1735, (-346), 2133, 1735, 2133, 1735, false, 1735, 0, 1735, (-346));
      DefaultDrawingEditor defaultDrawingEditor0 = new DefaultDrawingEditor();
      defaultSelectAreaTracker0.activate(defaultDrawingEditor0);
      defaultSelectAreaTracker0.mouseExited(mouseWheelEvent0);
      assertEquals(7, mouseWheelEvent0.getModifiers());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jTextPane0, (-1340), (-1340), (-1340), (-1340), (-1340), 242, 0, 242, true, 242, 0, 0);
      DiamondFigure diamondFigure0 = new DiamondFigure(8.0, 1.0, 0, 1.0);
      mouseWheelEvent0.setSource(diamondFigure0);
      // Undeclared exception!
      try { 
        defaultSelectAreaTracker0.mousePressed(mouseWheelEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jhotdraw.draw.figure.DiamondFigure cannot be cast to java.awt.Container
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      JMenuItem jMenuItem0 = new JMenuItem("", 0);
      MenuElement[] menuElementArray0 = new MenuElement[7];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jMenuItem0, 0, (-2254L), 0, 0, 0, (-23), false, menuElementArray0, menuSelectionManager0);
      LabelFigure labelFigure0 = new LabelFigure("<Sc#7l4\\g'QvL=");
      CloseHandle closeHandle0 = new CloseHandle(labelFigure0);
      menuDragMouseEvent0.setSource(closeHandle0);
      // Undeclared exception!
      try { 
        defaultSelectAreaTracker0.mouseMoved(menuDragMouseEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jhotdraw.draw.handle.CloseHandle cannot be cast to java.awt.Container
         //
         verifyException("org.jhotdraw.draw.tool.DefaultSelectAreaTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      // Undeclared exception!
      try { 
        defaultSelectAreaTracker0.mouseDragged((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.DefaultSelectAreaTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      // Undeclared exception!
      try { 
        defaultSelectAreaTracker0.draw((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.DefaultSelectAreaTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      // Undeclared exception!
      try { 
        defaultSelectAreaTracker0.activate((DrawingEditor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      DiamondFigure diamondFigure0 = new DiamondFigure(0.0, (-0.017453292519943295), (-0.017453292519943295), 0.0);
      defaultSelectAreaTracker0.updateHoverHandles(defaultDrawingView0, diamondFigure0);
      assertEquals(0, defaultDrawingView0.getSelectionCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      RoundRectangleFigure roundRectangleFigure0 = new RoundRectangleFigure();
      // Undeclared exception!
      try { 
        defaultSelectAreaTracker0.updateHoverHandles(defaultDrawingView0, roundRectangleFigure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.handle.AbstractHandle", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      DiamondFigure diamondFigure0 = new DiamondFigure(0.0, (-0.017453292519943295), (-0.017453292519943295), 0.0);
      diamondFigure0.setSelectable(false);
      defaultSelectAreaTracker0.updateHoverHandles(defaultDrawingView0, diamondFigure0);
      assertTrue(defaultDrawingView0.isDrawingDoubleBuffered());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      QuadTreeDrawing quadTreeDrawing0 = new QuadTreeDrawing();
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      defaultSelectAreaTracker0.updateHoverHandles(defaultDrawingView0, quadTreeDrawing0);
      defaultSelectAreaTracker0.updateHoverHandles(defaultDrawingView0, defaultDrawing0);
      assertEquals(3.0, defaultDrawing0.getStrokeMiterLimitFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat("Sh`5", "Sh`5", (String) null, 1);
      QuadTreeDrawing quadTreeDrawing0 = new QuadTreeDrawing();
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      LinkedHashSet<LabeledLineConnectionFigure> linkedHashSet0 = new LinkedHashSet<LabeledLineConnectionFigure>();
      List<Figure> list0 = defaultDrawing0.sort(linkedHashSet0);
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) quadTreeDrawing0, list0, 1.0, false);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      defaultSelectAreaTracker0.draw(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.transformState);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      JLayer<Container> jLayer0 = new JLayer<Container>();
      JPanel jPanel0 = jLayer0.createGlassPane();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jPanel0, (-346), 0L, 1735, (-346), 2133, 1735, 2133, 1735, false, 1735, 0, 1735, (-346));
      defaultSelectAreaTracker0.mouseDragged(mouseWheelEvent0);
      // Undeclared exception!
      try { 
        defaultSelectAreaTracker0.mouseMoved(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.DefaultSelectAreaTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jTextPane0, (-1340), (-1340), (-1340), (-1340), (-1340), 242, 0, 242, true, 242, (-1340), 0);
      defaultSelectAreaTracker0.mouseDragged(mouseWheelEvent0);
      defaultSelectAreaTracker0.mouseDragged(mouseWheelEvent0);
      assertEquals(242, mouseWheelEvent0.getClickCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jViewport0, 16777215, 16777215, 16777215, 1210, 0, 16777215, false, (MenuElement[]) null, menuSelectionManager0);
      // Undeclared exception!
      try { 
        defaultSelectAreaTracker0.mouseReleased(menuDragMouseEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      JTree jTree0 = new JTree();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jTree0, 0, 411L, 1, 1, 0, (-1402), 1408, (-1402), true, (-1566), (-527), 1);
      // Undeclared exception!
      try { 
        defaultSelectAreaTracker0.mousePressed(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      JPasswordField jPasswordField0 = new JPasswordField();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jPasswordField0, (-1), (-1), (-697), (-697), (-1), (-697), (-1), (-697), true, (-697), (-1), 1782);
      // Undeclared exception!
      try { 
        defaultSelectAreaTracker0.mouseExited(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.DefaultSelectAreaTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      defaultSelectAreaTracker0.clearHoverHandles();
      assertFalse(defaultSelectAreaTracker0.isActive());
  }
}
