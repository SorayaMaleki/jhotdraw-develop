/*
 * This file was automatically generated by EvoSuite
 * Sat May 29 15:53:52 GMT 2021
 */

package org.jhotdraw.draw.tool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.Panel;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.geom.Point2D;
import java.util.Vector;
import javax.swing.JInternalFrame;
import javax.swing.JTable;
import javax.swing.JToggleButton;
import javax.swing.JToolTip;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jhotdraw.draw.DefaultDrawingEditor;
import org.jhotdraw.draw.DefaultDrawingView;
import org.jhotdraw.draw.DrawingEditor;
import org.jhotdraw.draw.DrawingEditorProxy;
import org.jhotdraw.draw.QuadTreeDrawing;
import org.jhotdraw.draw.connector.ChopEllipseConnector;
import org.jhotdraw.draw.connector.Connector;
import org.jhotdraw.draw.connector.LocatorConnector;
import org.jhotdraw.draw.connector.StickyRectangleConnector;
import org.jhotdraw.draw.figure.ConnectionFigure;
import org.jhotdraw.draw.figure.EllipseFigure;
import org.jhotdraw.draw.figure.LabeledLineConnectionFigure;
import org.jhotdraw.draw.figure.LineConnectionFigure;
import org.jhotdraw.draw.figure.RectangleFigure;
import org.jhotdraw.draw.locator.Locator;
import org.jhotdraw.draw.locator.RelativeLocator;
import org.jhotdraw.draw.tool.ConnectionTool;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionTool_ESTest extends ConnectionTool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(lineConnectionFigure0);
      connectionTool0.setToolDoneAfterCreation(true);
      assertTrue(connectionTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(lineConnectionFigure0);
      DrawingEditorProxy drawingEditorProxy0 = new DrawingEditorProxy();
      connectionTool0.deactivate(drawingEditorProxy0);
      assertTrue(connectionTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      LabeledLineConnectionFigure labeledLineConnectionFigure1 = labeledLineConnectionFigure0.clone();
      ConnectionTool connectionTool0 = new ConnectionTool(labeledLineConnectionFigure1);
      RectangleFigure rectangleFigure0 = new RectangleFigure(6.0, 6.0, 6.0, 0.0);
      StickyRectangleConnector stickyRectangleConnector0 = new StickyRectangleConnector(rectangleFigure0);
      connectionTool0.canConnect(labeledLineConnectionFigure0, stickyRectangleConnector0, stickyRectangleConnector0);
      assertTrue(connectionTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(labeledLineConnectionFigure0);
      DefaultDrawingEditor defaultDrawingEditor0 = new DefaultDrawingEditor();
      connectionTool0.activate(defaultDrawingEditor0);
      assertTrue(connectionTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(labeledLineConnectionFigure0);
      assertTrue(connectionTool0.isToolDoneAfterCreation());
      
      connectionTool0.setToolDoneAfterCreation(false);
      boolean boolean0 = connectionTool0.isToolDoneAfterCreation();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConnectionTool connectionTool0 = new ConnectionTool((ConnectionFigure) null);
      connectionTool0.getPrototype();
      assertTrue(connectionTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(lineConnectionFigure0);
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      Point2D.Double point2D_Double0 = labeledLineConnectionFigure0.getStartPoint();
      Connector connector0 = ellipseFigure0.findConnector(point2D_Double0, labeledLineConnectionFigure0);
      Connector connector1 = labeledLineConnectionFigure0.findCompatibleConnector(connector0, false);
      connectionTool0.canConnect(lineConnectionFigure0, connector1, connector0);
      assertTrue(connectionTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(labeledLineConnectionFigure0);
      QuadTreeDrawing quadTreeDrawing0 = new QuadTreeDrawing();
      StickyRectangleConnector stickyRectangleConnector0 = new StickyRectangleConnector(quadTreeDrawing0);
      connectionTool0.canConnect(labeledLineConnectionFigure0, stickyRectangleConnector0);
      assertTrue(connectionTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(lineConnectionFigure0);
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      Locator locator0 = RelativeLocator.northEast();
      LocatorConnector locatorConnector0 = new LocatorConnector(lineConnectionFigure0, locator0);
      connectionTool0.canConnect(labeledLineConnectionFigure0, locatorConnector0);
      assertTrue(connectionTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(labeledLineConnectionFigure0);
      GridLayout gridLayout0 = new GridLayout(6, 6);
      Panel panel0 = new Panel(gridLayout0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(panel0, 6, 6, 6, (-4493), 0, 0, (-4493), 865, false, 679, 245, 679);
      // Undeclared exception!
      try { 
        connectionTool0.repaintConnectors(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(labeledLineConnectionFigure0);
      JToggleButton jToggleButton0 = new JToggleButton((String) null);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jToggleButton0, 0, 0L, 0, 3, 3, (-813), 0, 3, false, 8, 0, (-813));
      // Undeclared exception!
      try { 
        connectionTool0.mousePressed(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConnectionTool connectionTool0 = new ConnectionTool((ConnectionFigure) null);
      Vector<LabeledLineConnectionFigure> vector0 = new Vector<LabeledLineConnectionFigure>();
      JTable jTable0 = new JTable(vector0, vector0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jTable0, 780, 0L, 0, 0, 0, 6, false, 0, 0, 0);
      // Undeclared exception!
      try { 
        connectionTool0.mouseDragged(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(lineConnectionFigure0);
      // Undeclared exception!
      try { 
        connectionTool0.draw((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.ConnectionTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(labeledLineConnectionFigure0);
      // Undeclared exception!
      try { 
        connectionTool0.createFigure();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.ConnectionTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(labeledLineConnectionFigure0);
      boolean boolean0 = connectionTool0.isToolDoneAfterCreation();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(lineConnectionFigure0);
      connectionTool0.creationFinished(lineConnectionFigure0);
      assertTrue(connectionTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(lineConnectionFigure0);
      assertTrue(connectionTool0.isToolDoneAfterCreation());
      
      connectionTool0.setToolDoneAfterCreation(false);
      connectionTool0.creationFinished(lineConnectionFigure0);
      assertFalse(connectionTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(lineConnectionFigure0);
      int int0 = connectionTool0.getAnchorWidth();
      assertEquals(6, int0);
      assertTrue(connectionTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(labeledLineConnectionFigure0);
      ConnectionFigure connectionFigure0 = connectionTool0.getPrototype();
      assertTrue(connectionTool0.isToolDoneAfterCreation());
      assertNotNull(connectionFigure0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(labeledLineConnectionFigure0);
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      JToolTip jToolTip0 = defaultDrawingView0.createToolTip();
      MouseEvent mouseEvent0 = new MouseEvent(jToolTip0, (-2813), (-2813), (-2813), (-4568), 0, 0, (-2813), (-2813), false, 0);
      // Undeclared exception!
      try { 
        connectionTool0.mouseMoved(mouseEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(lineConnectionFigure0);
      connectionTool0.mouseReleased((MouseEvent) null);
      assertTrue(connectionTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(lineConnectionFigure0);
      assertTrue(connectionTool0.isToolDoneAfterCreation());
      
      connectionTool0.setToolDoneAfterCreation(false);
      JInternalFrame jInternalFrame0 = new JInternalFrame("");
      MouseEvent mouseEvent0 = new MouseEvent(jInternalFrame0, 1, 1, 31, 1, 2, 2, 2, 2046, false, 2);
      connectionTool0.mouseReleased(mouseEvent0);
      assertFalse(connectionTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(labeledLineConnectionFigure0);
      ChopEllipseConnector chopEllipseConnector0 = new ChopEllipseConnector();
      // Undeclared exception!
      try { 
        connectionTool0.canConnect(labeledLineConnectionFigure0, chopEllipseConnector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.figure.LineConnectionFigure", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(labeledLineConnectionFigure0);
      // Undeclared exception!
      try { 
        connectionTool0.activate((DrawingEditor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      ConnectionTool connectionTool0 = new ConnectionTool(labeledLineConnectionFigure0);
      // Undeclared exception!
      try { 
        connectionTool0.canConnect(labeledLineConnectionFigure0, (Connector) null, (Connector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.figure.LineConnectionFigure", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConnectionTool connectionTool0 = null;
      try {
        connectionTool0 = new ConnectionTool("");
        fail("Expecting exception: InternalError");
      
      } catch(InternalError e) {
         //
         // Unable to create ConnectionFigure from 
         //
         verifyException("org.jhotdraw.draw.tool.ConnectionTool", e);
      }
  }
}
