/*
 * This file was automatically generated by EvoSuite
 * Sat May 29 15:17:28 GMT 2021
 */

package org.jhotdraw.draw.tool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import javax.swing.JMenu;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jhotdraw.draw.AttributeKeys;
import org.jhotdraw.draw.DefaultDrawing;
import org.jhotdraw.draw.DefaultDrawingEditor;
import org.jhotdraw.draw.DefaultDrawingView;
import org.jhotdraw.draw.DrawingEditor;
import org.jhotdraw.draw.DrawingEditorProxy;
import org.jhotdraw.draw.DrawingView;
import org.jhotdraw.draw.figure.DiamondFigure;
import org.jhotdraw.draw.figure.Figure;
import org.jhotdraw.draw.figure.ImageFigure;
import org.jhotdraw.draw.figure.LabelFigure;
import org.jhotdraw.draw.figure.LineConnectionFigure;
import org.jhotdraw.draw.figure.TextAreaFigure;
import org.jhotdraw.draw.figure.TriangleFigure;
import org.jhotdraw.draw.tool.CreationTool;
import org.jhotdraw.draw.tool.ImageTool;
import org.jhotdraw.draw.tool.TextAreaCreationTool;
import org.jhotdraw.draw.tool.TextCreationTool;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CreationTool_ESTest extends CreationTool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImageFigure imageFigure0 = new ImageFigure();
      ImageTool imageTool0 = new ImageTool(imageFigure0);
      imageTool0.setToolDoneAfterCreation(true);
      assertTrue(imageTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LabelFigure labelFigure0 = new LabelFigure();
      CreationTool creationTool0 = new CreationTool(labelFigure0);
      DrawingEditorProxy drawingEditorProxy0 = new DrawingEditorProxy();
      creationTool0.deactivate(drawingEditorProxy0);
      // Undeclared exception!
      try { 
        creationTool0.creationFinished(labelFigure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.CreationTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextAreaFigure textAreaFigure0 = new TextAreaFigure((String) null);
      TextAreaFigure textAreaFigure1 = textAreaFigure0.clone();
      CreationTool creationTool0 = new CreationTool(textAreaFigure1);
      // Undeclared exception!
      try { 
        creationTool0.creationFinished(textAreaFigure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImageFigure imageFigure0 = new ImageFigure();
      ImageTool imageTool0 = new ImageTool(imageFigure0);
      Figure figure0 = imageTool0.getAddedFigure();
      assertNull(figure0);
      assertTrue(imageTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImageFigure imageFigure0 = new ImageFigure();
      ImageTool imageTool0 = new ImageTool(imageFigure0);
      JMenu jMenu0 = new JMenu();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jMenu0, 310, 310, 0, 310, 0, 0, false, 3, (-746), 65);
      imageTool0.mouseDragged(mouseWheelEvent0);
      assertTrue(imageTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CreationTool creationTool0 = new CreationTool((Figure) null);
      assertTrue(creationTool0.isToolDoneAfterCreation());
      
      creationTool0.setToolDoneAfterCreation(false);
      boolean boolean0 = creationTool0.isToolDoneAfterCreation();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      CreationTool creationTool0 = new CreationTool(lineConnectionFigure0);
      Figure figure0 = creationTool0.getPrototype();
      assertTrue(creationTool0.isToolDoneAfterCreation());
      assertNotNull(figure0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LabelFigure labelFigure0 = new LabelFigure();
      CreationTool creationTool0 = new CreationTool(labelFigure0);
      Figure figure0 = creationTool0.getPrototype();
      assertNotNull(figure0);
      assertTrue(creationTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LabelFigure labelFigure0 = new LabelFigure();
      TextAreaCreationTool textAreaCreationTool0 = new TextAreaCreationTool(labelFigure0);
      Point point0 = new Point(0, 40);
      // Undeclared exception!
      try { 
        textAreaCreationTool0.updateCursor((DrawingView) null, point0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.CreationTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LabelFigure labelFigure0 = new LabelFigure("");
      TextCreationTool textCreationTool0 = new TextCreationTool(labelFigure0);
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(defaultDrawingView0, 0, 0, 0, (-1), (-4610), 800, true, (MenuElement[]) null, (MenuSelectionManager) null);
      // Undeclared exception!
      try { 
        textCreationTool0.mousePressed(menuDragMouseEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TextAreaFigure textAreaFigure0 = new TextAreaFigure("/zi ");
      TextCreationTool textCreationTool0 = new TextCreationTool(textAreaFigure0);
      // Undeclared exception!
      try { 
        textCreationTool0.deactivate((DrawingEditor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LabelFigure labelFigure0 = new LabelFigure();
      TextCreationTool textCreationTool0 = new TextCreationTool(labelFigure0);
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      // Undeclared exception!
      try { 
        textCreationTool0.creationFinished(defaultDrawing0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jhotdraw.draw.DefaultDrawing cannot be cast to org.jhotdraw.draw.figure.TextHolderFigure
         //
         verifyException("org.jhotdraw.draw.tool.TextCreationTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImageFigure imageFigure0 = new ImageFigure();
      ImageTool imageTool0 = new ImageTool(imageFigure0);
      DrawingEditorProxy drawingEditorProxy0 = new DrawingEditorProxy();
      // Undeclared exception!
      try { 
        imageTool0.activate(drawingEditorProxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.DrawingEditorProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LabelFigure labelFigure0 = new LabelFigure();
      TextCreationTool textCreationTool0 = new TextCreationTool(labelFigure0);
      DefaultDrawingEditor defaultDrawingEditor0 = new DefaultDrawingEditor();
      textCreationTool0.activate(defaultDrawingEditor0);
      assertTrue(textCreationTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AttributeKeys.Orientation attributeKeys_Orientation0 = AttributeKeys.Orientation.SOUTH_EAST;
      TriangleFigure triangleFigure0 = new TriangleFigure(attributeKeys_Orientation0);
      CreationTool creationTool0 = new CreationTool(triangleFigure0);
      boolean boolean0 = creationTool0.isToolDoneAfterCreation();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DiamondFigure diamondFigure0 = new DiamondFigure((-53.86915309217), (-0.6848769747485777), (-53.86915309217), 0.0);
      CreationTool creationTool0 = new CreationTool(diamondFigure0);
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      Point point0 = defaultDrawingView0.getLocation();
      creationTool0.updateCursor(defaultDrawingView0, point0);
      assertTrue(creationTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TextAreaFigure textAreaFigure0 = new TextAreaFigure();
      TextAreaCreationTool textAreaCreationTool0 = new TextAreaCreationTool(textAreaFigure0);
      assertTrue(textAreaCreationTool0.isToolDoneAfterCreation());
      
      textAreaCreationTool0.setToolDoneAfterCreation(false);
      textAreaCreationTool0.mouseReleased((MouseEvent) null);
      assertFalse(textAreaCreationTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImageFigure imageFigure0 = new ImageFigure();
      ImageTool imageTool0 = new ImageTool(imageFigure0);
      DefaultDrawingEditor defaultDrawingEditor0 = new DefaultDrawingEditor();
      imageTool0.activate(defaultDrawingEditor0);
      Figure figure0 = imageTool0.createFigure();
      assertTrue(imageTool0.isToolDoneAfterCreation());
      assertNotSame(figure0, imageFigure0);
      assertNotNull(figure0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CreationTool creationTool0 = new CreationTool((Figure) null);
      creationTool0.mouseReleased((MouseEvent) null);
      assertTrue(creationTool0.isToolDoneAfterCreation());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TextAreaFigure textAreaFigure0 = new TextAreaFigure();
      TextAreaCreationTool textAreaCreationTool0 = new TextAreaCreationTool(textAreaFigure0);
      Figure figure0 = textAreaCreationTool0.getCreatedFigure();
      assertTrue(textAreaCreationTool0.isToolDoneAfterCreation());
      assertNull(figure0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CreationTool creationTool0 = null;
      try {
        creationTool0 = new CreationTool("(L0tzPPa6z@5U,N0>$");
        fail("Expecting exception: InternalError");
      
      } catch(InternalError e) {
         //
         // Unable to create Figure from (L0tzPPa6z@5U,N0>$
         //
         verifyException("org.jhotdraw.draw.tool.CreationTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CreationTool creationTool0 = new CreationTool((Figure) null);
      creationTool0.getPrototype();
      assertTrue(creationTool0.isToolDoneAfterCreation());
  }
}
