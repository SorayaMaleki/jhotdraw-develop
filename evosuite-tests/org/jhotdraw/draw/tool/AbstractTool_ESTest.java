/*
 * This file was automatically generated by EvoSuite
 * Sat May 29 15:35:42 GMT 2021
 */

package org.jhotdraw.draw.tool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.InputMap;
import javax.swing.JInternalFrame;
import javax.swing.JList;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JToggleButton;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.TransferHandler;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.DefaultEditorKit;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.undo.UndoManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jhotdraw.draw.DefaultDrawing;
import org.jhotdraw.draw.DefaultDrawingEditor;
import org.jhotdraw.draw.DefaultDrawingView;
import org.jhotdraw.draw.Drawing;
import org.jhotdraw.draw.DrawingEditor;
import org.jhotdraw.draw.QuadTreeDrawing;
import org.jhotdraw.draw.event.ToolAdapter;
import org.jhotdraw.draw.event.ToolListener;
import org.jhotdraw.draw.figure.BezierFigure;
import org.jhotdraw.draw.figure.Figure;
import org.jhotdraw.draw.figure.ImageFigure;
import org.jhotdraw.draw.figure.LabelFigure;
import org.jhotdraw.draw.figure.LabeledLineConnectionFigure;
import org.jhotdraw.draw.figure.LineConnectionFigure;
import org.jhotdraw.draw.figure.ListFigure;
import org.jhotdraw.draw.figure.RoundRectangleFigure;
import org.jhotdraw.draw.figure.TextAreaFigure;
import org.jhotdraw.draw.figure.TextFigure;
import org.jhotdraw.draw.handle.ConnectionStartHandle;
import org.jhotdraw.draw.handle.Handle;
import org.jhotdraw.draw.io.ImageOutputFormat;
import org.jhotdraw.draw.tool.BezierTool;
import org.jhotdraw.draw.tool.CreationTool;
import org.jhotdraw.draw.tool.DefaultDragTracker;
import org.jhotdraw.draw.tool.DefaultHandleTracker;
import org.jhotdraw.draw.tool.DefaultSelectAreaTracker;
import org.jhotdraw.draw.tool.DelegationSelectionTool;
import org.jhotdraw.draw.tool.DnDTracker;
import org.jhotdraw.draw.tool.ImageTool;
import org.jhotdraw.draw.tool.SelectionTool;
import org.jhotdraw.draw.tool.TextAreaCreationTool;
import org.jhotdraw.draw.tool.TextAreaEditingTool;
import org.jhotdraw.draw.tool.TextCreationTool;
import org.jhotdraw.draw.tool.TextEditingTool;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractTool_ESTest extends AbstractTool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LabelFigure labelFigure0 = new LabelFigure(";/Ib}_Pj]jY~-s`");
      TextCreationTool textCreationTool0 = new TextCreationTool(labelFigure0);
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      TransferHandler transferHandler0 = defaultDrawingView0.getTransferHandler();
      Point point0 = transferHandler0.getDragImageOffset();
      textCreationTool0.updateCursor(defaultDrawingView0, point0);
      assertEquals(0, defaultDrawingView0.getHandleDetailLevel());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DelegationSelectionTool delegationSelectionTool0 = new DelegationSelectionTool();
      delegationSelectionTool0.fireToolDone();
      assertTrue(delegationSelectionTool0.isSelectBehindEnabled());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DelegationSelectionTool delegationSelectionTool0 = new DelegationSelectionTool();
      delegationSelectionTool0.editCopy();
      assertTrue(delegationSelectionTool0.isSelectBehindEnabled());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DelegationSelectionTool delegationSelectionTool0 = new DelegationSelectionTool();
      delegationSelectionTool0.deactivate((DrawingEditor) null);
      assertFalse(delegationSelectionTool0.isActive());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CreationTool creationTool0 = new CreationTool((Figure) null);
      DefaultDrawingEditor defaultDrawingEditor0 = new DefaultDrawingEditor();
      creationTool0.activate(defaultDrawingEditor0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(defaultTreeCellRenderer0, 0, (-1L), 0, 0, 0, 0, 0, 0, false, menuElementArray0, menuSelectionManager0);
      // Undeclared exception!
      try { 
        creationTool0.mousePressed(menuDragMouseEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DelegationSelectionTool delegationSelectionTool0 = new DelegationSelectionTool();
      boolean boolean0 = delegationSelectionTool0.supportsHandleInteraction();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultDrawingEditor defaultDrawingEditor0 = new DefaultDrawingEditor();
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      defaultSelectAreaTracker0.deactivate(defaultDrawingEditor0);
      DrawingEditor drawingEditor0 = defaultSelectAreaTracker0.getEditor();
      assertNotNull(drawingEditor0);
      assertFalse(defaultSelectAreaTracker0.isActive());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      InputMap inputMap0 = defaultSelectAreaTracker0.createInputMap();
      assertNull(inputMap0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultDragTracker defaultDragTracker0 = new DefaultDragTracker();
      ActionMap actionMap0 = defaultDragTracker0.createActionMap();
      assertNull(actionMap0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DelegationSelectionTool delegationSelectionTool0 = new DelegationSelectionTool();
      JMenuItem jMenuItem0 = new JMenuItem("selectBehindEnabled", 0);
      MouseEvent mouseEvent0 = new MouseEvent(jMenuItem0, 0, 0, 559, (-1149), 0, 559, false);
      // Undeclared exception!
      try { 
        delegationSelectionTool0.mouseReleased(mouseEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SelectionTool selectionTool0 = new SelectionTool();
      byte[] byteArray0 = new byte[9];
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      JToggleButton jToggleButton0 = new JToggleButton("6~+Q+Y8X\r@X~ 5)", imageIcon0);
      KeyEvent keyEvent0 = new KeyEvent(jToggleButton0, (byte)108, 0L, 1, (byte)1, ':');
      // Undeclared exception!
      try { 
        selectionTool0.keyTyped(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImageFigure imageFigure0 = new ImageFigure();
      ImageTool imageTool0 = new ImageTool(imageFigure0);
      // Undeclared exception!
      try { 
        imageTool0.getView();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      // Undeclared exception!
      try { 
        defaultSelectAreaTracker0.getDrawing();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TextFigure textFigure0 = new TextFigure();
      TextCreationTool textCreationTool0 = new TextCreationTool(textFigure0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Figure[] figureArray0 = new Figure[7];
      // Undeclared exception!
      try { 
        textCreationTool0.constrainPoint(point2D_Double0, figureArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArrayList<Action> arrayList0 = new ArrayList<Action>();
      DelegationSelectionTool delegationSelectionTool0 = new DelegationSelectionTool(arrayList0, arrayList0);
      // Undeclared exception!
      try { 
        delegationSelectionTool0.activate((DrawingEditor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LabelFigure labelFigure0 = new LabelFigure();
      TextEditingTool textEditingTool0 = new TextEditingTool(labelFigure0);
      DefaultDrawingEditor defaultDrawingEditor0 = new DefaultDrawingEditor();
      textEditingTool0.activate(defaultDrawingEditor0);
      assertTrue(textEditingTool0.isActive());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      defaultSelectAreaTracker0.setActionMap((ActionMap) null);
      assertFalse(defaultSelectAreaTracker0.supportsHandleInteraction());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      defaultSelectAreaTracker0.setInputMap((InputMap) null);
      assertFalse(defaultSelectAreaTracker0.supportsHandleInteraction());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      defaultSelectAreaTracker0.removeToolListener((ToolListener) null);
      assertFalse(defaultSelectAreaTracker0.isActive());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      BezierTool bezierTool0 = new BezierTool(labeledLineConnectionFigure0);
      JInternalFrame jInternalFrame0 = new JInternalFrame((String) null, true);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jInternalFrame0, (-301), (-301), 1, 1, 2142, 508, 1, (-301), false, 508, 4034, 366, 1);
      bezierTool0.mouseEntered(mouseWheelEvent0);
      assertFalse(mouseWheelEvent0.isMetaDown());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      BezierTool bezierTool0 = new BezierTool(lineConnectionFigure0, false);
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      String[] stringArray0 = new String[2];
      JList<String> jList0 = new JList<String>(stringArray0);
      Point point0 = jList0.indexToLocation(0);
      // Undeclared exception!
      try { 
        bezierTool0.updateCursor(defaultDrawingView0, point0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.DefaultDrawingView", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TextAreaFigure textAreaFigure0 = new TextAreaFigure("hQC7k");
      TextCreationTool textCreationTool0 = new TextCreationTool(textAreaFigure0);
      ToolAdapter toolAdapter0 = new ToolAdapter();
      textCreationTool0.addToolListener(toolAdapter0);
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      Rectangle rectangle0 = defaultDrawingView0.getVisibleRect();
      // Undeclared exception!
      try { 
        textCreationTool0.fireBoundsInvalidated(rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TextAreaFigure textAreaFigure0 = new TextAreaFigure("hQC7k");
      TextCreationTool textCreationTool0 = new TextCreationTool(textAreaFigure0);
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      Rectangle rectangle0 = defaultDrawingView0.getVisibleRect();
      textCreationTool0.fireBoundsInvalidated(rectangle0);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TextAreaFigure textAreaFigure0 = new TextAreaFigure("hQC7k");
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      DefaultHandleTracker defaultHandleTracker0 = new DefaultHandleTracker();
      defaultHandleTracker0.updateHoverHandles(defaultDrawingView0, textAreaFigure0);
      assertEquals(0, defaultDrawingView0.getHandleDetailLevel());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TextAreaFigure textAreaFigure0 = new TextAreaFigure("hQC7k");
      TextCreationTool textCreationTool0 = new TextCreationTool(textAreaFigure0);
      ToolAdapter toolAdapter0 = new ToolAdapter();
      textCreationTool0.addToolListener(toolAdapter0);
      // Undeclared exception!
      try { 
        textCreationTool0.fireToolDone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      defaultSelectAreaTracker0.fireToolStarted(defaultDrawingView0);
      assertTrue(defaultDrawingView0.isSelectionEmpty());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TextAreaFigure textAreaFigure0 = new TextAreaFigure();
      TextEditingTool textEditingTool0 = new TextEditingTool(textAreaFigure0);
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("h[AS");
      KeyEvent keyEvent0 = new KeyEvent(jRadioButtonMenuItem0, (-1614), 0L, (-1747), (-1), '|', 0);
      // Undeclared exception!
      try { 
        textEditingTool0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TextAreaFigure textAreaFigure0 = new TextAreaFigure("hQC7k");
      TextCreationTool textCreationTool0 = new TextCreationTool(textAreaFigure0);
      ActionMap actionMap0 = textCreationTool0.getActionMap();
      assertNull(actionMap0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LabelFigure labelFigure0 = new LabelFigure("");
      TextAreaEditingTool textAreaEditingTool0 = new TextAreaEditingTool(labelFigure0);
      Figure[] figureArray0 = new Figure[2];
      // Undeclared exception!
      try { 
        textAreaEditingTool0.constrainPoint((Point) null, figureArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArrayDeque<Action> arrayDeque0 = new ArrayDeque<Action>();
      DelegationSelectionTool delegationSelectionTool0 = new DelegationSelectionTool(arrayDeque0, arrayDeque0);
      // Undeclared exception!
      try { 
        delegationSelectionTool0.viewToDrawing((Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TextAreaFigure textAreaFigure0 = new TextAreaFigure("9}an");
      TextCreationTool textCreationTool0 = new TextCreationTool(textAreaFigure0);
      DefaultDrawingView defaultDrawingView0 = new DefaultDrawingView();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(defaultDrawingView0, (-2), 2424L, (-2), (-2), (-2), (-2), (-2), (-1790), true, (-2), 2011, 1323);
      String string0 = textCreationTool0.getToolTipText(defaultDrawingView0, mouseWheelEvent0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      BezierTool bezierTool0 = new BezierTool(labeledLineConnectionFigure0);
      bezierTool0.mouseExited((MouseEvent) null);
      assertFalse(bezierTool0.isActive());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LabelFigure labelFigure0 = new LabelFigure();
      TextCreationTool textCreationTool0 = new TextCreationTool(labelFigure0);
      textCreationTool0.editCut();
      assertFalse(textCreationTool0.isEditing());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JList<String> jList0 = new JList<String>(defaultComboBoxModel0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jList0, (-1714), 0L, (-767), (-1714), 0, 0, true, (-1714), 0, 24);
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      ListFigure listFigure0 = new ListFigure(lineConnectionFigure0);
      DefaultDragTracker defaultDragTracker0 = new DefaultDragTracker(listFigure0);
      // Undeclared exception!
      try { 
        defaultDragTracker0.mouseReleased(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LineConnectionFigure lineConnectionFigure0 = new LineConnectionFigure();
      ConnectionStartHandle connectionStartHandle0 = new ConnectionStartHandle(lineConnectionFigure0);
      Vector<Handle> vector0 = new Vector<Handle>();
      DefaultHandleTracker defaultHandleTracker0 = new DefaultHandleTracker(connectionStartHandle0, vector0);
      defaultHandleTracker0.editDuplicate();
      assertFalse(defaultHandleTracker0.supportsHandleInteraction());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BezierTool bezierTool0 = new BezierTool((BezierFigure) null, true);
      boolean boolean0 = bezierTool0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RoundRectangleFigure roundRectangleFigure0 = new RoundRectangleFigure(167.704906934795, 167.704906934795, 167.704906934795, 3.14);
      DefaultDragTracker defaultDragTracker0 = new DefaultDragTracker(roundRectangleFigure0);
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      Rectangle2D.Double rectangle2D_Double0 = defaultDrawing0.getFigureDrawBounds();
      // Undeclared exception!
      try { 
        defaultDragTracker0.fireAreaInvalidated(rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TextFigure textFigure0 = new TextFigure("");
      TextAreaCreationTool textAreaCreationTool0 = new TextAreaCreationTool(textFigure0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      KeyEvent keyEvent0 = new KeyEvent(jTableHeader0, 1, 1, 1, (-2726), '2');
      textAreaCreationTool0.keyReleased(keyEvent0);
      assertFalse(keyEvent0.isActionKey());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LabelFigure labelFigure0 = new LabelFigure();
      TextAreaCreationTool textAreaCreationTool0 = new TextAreaCreationTool(labelFigure0);
      // Undeclared exception!
      try { 
        textAreaCreationTool0.editDelete();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      BezierTool bezierTool0 = new BezierTool(labeledLineConnectionFigure0, false);
      InputMap inputMap0 = bezierTool0.getInputMap();
      assertNull(inputMap0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DnDTracker dnDTracker0 = new DnDTracker();
      dnDTracker0.editPaste();
      assertFalse(dnDTracker0.isActive());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultSelectAreaTracker defaultSelectAreaTracker0 = new DefaultSelectAreaTracker();
      boolean boolean0 = defaultSelectAreaTracker0.supportsHandleInteraction();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      QuadTreeDrawing quadTreeDrawing0 = new QuadTreeDrawing();
      CreationTool creationTool0 = new CreationTool(quadTreeDrawing0);
      DefaultEditorKit.CopyAction defaultEditorKit_CopyAction0 = new DefaultEditorKit.CopyAction();
      JMenu jMenu0 = new JMenu(defaultEditorKit_CopyAction0);
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      MenuElement[] menuElementArray0 = new MenuElement[5];
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jPopupMenu0, 0, 0, 0, 290, 0, 290, false, menuElementArray0, menuSelectionManager0);
      creationTool0.mouseMoved(menuDragMouseEvent0);
      assertFalse(creationTool0.isActive());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultDragTracker defaultDragTracker0 = new DefaultDragTracker();
      Line2D.Double line2D_Double0 = new Line2D.Double((-89.98705), (-89.98705), (-2958.0), 5283.365);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      // Undeclared exception!
      try { 
        defaultDragTracker0.maybeFireBoundsInvalidated(rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.tool.AbstractTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TextAreaFigure textAreaFigure0 = new TextAreaFigure((String) null);
      TextCreationTool textCreationTool0 = new TextCreationTool(textAreaFigure0);
      UndoManager undoManager0 = new UndoManager();
      textCreationTool0.addUndoableEditListener(undoManager0);
      assertFalse(textCreationTool0.supportsHandleInteraction());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DelegationSelectionTool delegationSelectionTool0 = new DelegationSelectionTool();
      UndoManager undoManager0 = new UndoManager();
      delegationSelectionTool0.removeUndoableEditListener(undoManager0);
      assertFalse(delegationSelectionTool0.isActive());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ArrayList<Action> arrayList0 = new ArrayList<Action>();
      DelegationSelectionTool delegationSelectionTool0 = new DelegationSelectionTool(arrayList0, arrayList0);
      DrawingEditor drawingEditor0 = delegationSelectionTool0.getEditor();
      assertNull(drawingEditor0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TextAreaFigure textAreaFigure0 = new TextAreaFigure("\"97@N");
      TextEditingTool textEditingTool0 = new TextEditingTool(textAreaFigure0);
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat("\"97@N", "\"x=rv<K*bf", "org.jhotdraw.draw.tool.AbstractTool", (-168));
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      LinkedList<Figure> linkedList0 = new LinkedList<Figure>();
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, (List<Figure>) linkedList0, 0.0, true);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      textEditingTool0.draw(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.transformState);
  }
}
