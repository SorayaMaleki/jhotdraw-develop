/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 05 07:48:52 GMT 2021
 */

package org.jhotdraw.draw;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jhotdraw.draw.AttributeKeys;
import org.jhotdraw.draw.DefaultDrawing;
import org.jhotdraw.draw.figure.BezierFigure;
import org.jhotdraw.draw.figure.Figure;
import org.jhotdraw.draw.figure.GroupFigure;
import org.jhotdraw.draw.figure.ListFigure;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AttributeKeys_ESTest extends AttributeKeys_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(959.329787568, 959.329787568, 0.0);
      double double0 = AttributeKeys.getScaleFactor(affineTransform0);
      assertEquals((-2.4158618881061935), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttributeKeys.getStrokeTotalWidth((Figure) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttributeKeys.getStrokeTotalMiterLimit((Figure) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttributeKeys.getStroke((Figure) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttributeKeys.getPerpendicularFillGrowth((Figure) null, (-2114.007968216065));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttributeKeys.getPerpendicularDrawGrowth((Figure) null, (-572.253486325));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttributeKeys.getHitStroke((Figure) null, 1306.73315112784);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttributeKeys.getGlobalValueFactor((Figure) null, (-486.746789771239));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttributeKeys.getFontStyle((Figure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttributeKeys.getFont((Figure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      double double0 = AttributeKeys.getPerpendicularHitGrowth(defaultDrawing0, 0.0);
      assertEquals(0.5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BezierFigure bezierFigure0 = new BezierFigure(false);
      double double0 = AttributeKeys.getPerpendicularDrawGrowth(bezierFigure0, 687.8608);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      int int0 = AttributeKeys.getFontStyle(defaultDrawing0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      BasicStroke basicStroke0 = (BasicStroke)AttributeKeys.getStroke(defaultDrawing0, 0.0);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(3.0F, basicStroke0.getMiterLimit(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ListFigure listFigure0 = new ListFigure();
      double double0 = AttributeKeys.getStrokeTotalMiterLimit(listFigure0, 1);
      assertEquals(3.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      double double0 = AttributeKeys.getStrokeTotalWidth(defaultDrawing0, (-1423.79800613));
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      double double0 = AttributeKeys.getGlobalValueFactor(defaultDrawing0, (-2730.3));
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GroupFigure groupFigure0 = new GroupFigure();
      // Undeclared exception!
      try { 
        AttributeKeys.getPerpendicularHitGrowth(groupFigure0, 2.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      double double0 = AttributeKeys.getPerpendicularFillGrowth(defaultDrawing0, (-1672.571905));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      Font font0 = AttributeKeys.getFont(defaultDrawing0);
      assertNotNull(font0);
      assertEquals(12.0F, font0.getSize2D(), 0.01F);
      assertTrue(font0.isPlain());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((int) (byte) (-69), (double) (-675), (double) (byte) (-117));
      double double0 = AttributeKeys.getScaleFactor(affineTransform0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = AttributeKeys.getScaleFactor((AffineTransform) null);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 7);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      double double0 = AttributeKeys.getScaleFactorFromGraphics(graphics2D0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ListFigure listFigure0 = new ListFigure();
      BasicStroke basicStroke0 = (BasicStroke)AttributeKeys.getHitStroke(listFigure0, 2.0);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(3.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GroupFigure groupFigure0 = new GroupFigure();
      double double0 = AttributeKeys.getGlobalValueFactor(groupFigure0, 1.0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttributeKeys.getScaleFactorFromGraphics((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AttributeKeys attributeKeys0 = new AttributeKeys();
  }
}
