/*
 * This file was automatically generated by EvoSuite
 * Sat May 29 13:51:26 GMT 2021
 */

package org.jhotdraw.draw.figure;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jhotdraw.draw.DefaultDrawing;
import org.jhotdraw.draw.Drawing;
import org.jhotdraw.draw.QuadTreeDrawing;
import org.jhotdraw.draw.connector.ChopEllipseConnector;
import org.jhotdraw.draw.connector.Connector;
import org.jhotdraw.draw.figure.EllipseFigure;
import org.jhotdraw.draw.figure.Figure;
import org.jhotdraw.draw.figure.GroupFigure;
import org.jhotdraw.draw.figure.LabeledLineConnectionFigure;
import org.jhotdraw.draw.io.ImageOutputFormat;
import org.jhotdraw.draw.locator.BezierLabelLocator;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EllipseFigure_ESTest extends EllipseFigure_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(1.0, 1.0, 1.0, 0.0);
      BezierLabelLocator bezierLabelLocator0 = new BezierLabelLocator(0.0, 0.0, 0.0);
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      Point2D.Double point2D_Double0 = bezierLabelLocator0.getRelativePoint(labeledLineConnectionFigure0);
      point2D_Double0.setLocation(1.0, 1112.52642527);
      ellipseFigure0.setBounds(point2D_Double0, point2D_Double0);
      assertEquals(0, ellipseFigure0.getLayer());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      Rectangle2D.Double rectangle2D_Double0 = labeledLineConnectionFigure0.getDrawingArea(1.0);
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat("liner", "5eZpgPPx|4Uv+4", (String) null, (-2111));
      QuadTreeDrawing quadTreeDrawing0 = new QuadTreeDrawing();
      List<Figure> list0 = quadTreeDrawing0.findFigures(rectangle2D_Double0);
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, list0, (double) (-2111), true);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      EllipseFigure ellipseFigure0 = new EllipseFigure(0.0, 0, 2.0, (-2.5));
      ellipseFigure0.drawStroke(sunGraphics2D0);
      assertEquals((-1), sunGraphics2D0.eargb);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat("", "", "", 605525535);
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      GroupFigure groupFigure0 = new GroupFigure();
      ArrayList<Figure> arrayList0 = groupFigure0.children;
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, (List<Figure>) arrayList0, 478.742673, true);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawStroke(sunGraphics2D0);
      assertEquals((-1), sunGraphics2D0.pixel);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(777L, 777L, 777L, (-279.871738424));
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat("=1Q+Hrb']v", "=1Q+Hrb']v", "=1Q+Hrb']v", (-1));
      QuadTreeDrawing quadTreeDrawing0 = new QuadTreeDrawing();
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      List<Figure> list0 = defaultDrawing0.getChildrenFrontToBack();
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) quadTreeDrawing0, list0, (double) (-1), true);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawFill(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure((-1.2700889005630218), (-1.2700889005630218), (-1.2700889005630218), 0.0);
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      Rectangle2D.Double rectangle2D_Double0 = labeledLineConnectionFigure0.getDrawingArea(0.0);
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat("liner", "5eZpgPPx|4Uv+4", (String) null, (-2118));
      QuadTreeDrawing quadTreeDrawing0 = new QuadTreeDrawing();
      List<Figure> list0 = quadTreeDrawing0.findFigures(rectangle2D_Double0);
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, list0, (double) (-2118), true);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawFill(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.transY);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(4987.2272484, 4987.2272484, 0.0, 4987.2272484);
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getDrawingArea();
      assertEquals(9975.9544968, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(4988.7272484, rectangle2D_Double0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure((-4010.476093), 0.0, 0.0, (-1551.4));
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getDrawingArea();
      assertEquals((-4008.976093), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1549.9), rectangle2D_Double0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(4987.2272484, 4987.2272484, 0.0, 4987.2272484);
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getBounds();
      assertEquals(4987.2272484, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(9974.4544968, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure((-2101.5900927), (-2101.5900927), (-2101.5900927), (-2101.5900927));
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getBounds();
      assertEquals((-4203.1801854), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-4203.1801854), rectangle2D_Double0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(1.0, 1.0, 1.0, 0.0);
      BezierLabelLocator bezierLabelLocator0 = new BezierLabelLocator(0.0, 0.0, 0.0);
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      Point2D.Double point2D_Double0 = bezierLabelLocator0.getRelativePoint(labeledLineConnectionFigure0);
      ellipseFigure0.setBounds(point2D_Double0, point2D_Double0);
      boolean boolean0 = ellipseFigure0.contains(point2D_Double0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(485.8, 485.8, 485.8, 485.8);
      ellipseFigure0.setRemovable(false);
      EllipseFigure ellipseFigure1 = ellipseFigure0.clone();
      assertNotSame(ellipseFigure1, ellipseFigure0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure((-864.0733284661193), (-864.0733284661193), (-864.0733284661193), (-864.0733284661193));
      ellipseFigure0.setConnectable(false);
      EllipseFigure ellipseFigure1 = ellipseFigure0.clone();
      assertNotSame(ellipseFigure1, ellipseFigure0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(0.0, 0.0, 0.0, 0.0);
      // Undeclared exception!
      try { 
        ellipseFigure0.transform((AffineTransform) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.figure.EllipseFigure", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure((-738.1589), 0.0, 0.0, 1065.1555997);
      // Undeclared exception!
      try { 
        ellipseFigure0.setBounds((Point2D.Double) null, (Point2D.Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.figure.EllipseFigure", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(2.0, (-1337.2), 2.0, (-2889.927428054));
      // Undeclared exception!
      try { 
        ellipseFigure0.restoreTransformTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.figure.EllipseFigure", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      Integer integer0 = new Integer((-1));
      // Undeclared exception!
      try { 
        ellipseFigure0.restoreTransformTo(integer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.awt.geom.Ellipse2D$Double
         //
         verifyException("org.jhotdraw.draw.figure.EllipseFigure", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(0.0, 0.0, (-966.263537551941), (-966.263537551941));
      // Undeclared exception!
      try { 
        ellipseFigure0.drawStroke((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      // Undeclared exception!
      try { 
        ellipseFigure0.drawFill((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(3146.518052, 3146.518052, 3090.631103827, 4410.506866834841);
      // Undeclared exception!
      try { 
        ellipseFigure0.contains((Point2D.Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.RectangularShape", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(1.0, 1.0, 1.0, 0.0);
      BezierLabelLocator bezierLabelLocator0 = new BezierLabelLocator(0.0, 0.0, 0.0);
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      Rectangle2D.Double rectangle2D_Double0 = labeledLineConnectionFigure0.getDrawingArea(0.0);
      Point2D.Double point2D_Double0 = bezierLabelLocator0.getRelativePoint(labeledLineConnectionFigure0);
      ellipseFigure0.setBounds(point2D_Double0, point2D_Double0);
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat("liner", "5eZpgPPx|4Uv+4", (String) null, (-2118));
      QuadTreeDrawing quadTreeDrawing0 = new QuadTreeDrawing();
      List<Figure> list0 = quadTreeDrawing0.findFigures(rectangle2D_Double0);
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, list0, (double) (-2118), false);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawStroke(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.transformState);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(1.0, 1.0, 1.0, 0.0);
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      Rectangle2D.Double rectangle2D_Double0 = labeledLineConnectionFigure0.getDrawingArea(0.0);
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat("liner", "5eZpgPPx|4Uv+4", (String) null, (-2118));
      QuadTreeDrawing quadTreeDrawing0 = new QuadTreeDrawing();
      List<Figure> list0 = quadTreeDrawing0.findFigures(rectangle2D_Double0);
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, list0, (double) (-2118), false);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawStroke(sunGraphics2D0);
      assertEquals(1, sunGraphics2D0.antialiasHint);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure((-1.2700889005630218), (-1.2700889005630218), (-1.2700889005630218), 0.0);
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      Rectangle2D.Double rectangle2D_Double0 = labeledLineConnectionFigure0.getDrawingArea(0.0);
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat("liner", "5eZpgPPx|4Uv+4", (String) null, (-2118));
      QuadTreeDrawing quadTreeDrawing0 = new QuadTreeDrawing();
      List<Figure> list0 = quadTreeDrawing0.findFigures(rectangle2D_Double0);
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, list0, (double) (-2118), true);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawStroke(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.constrainX);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(1.0, 1.0, 1.0, 0.0);
      BezierLabelLocator bezierLabelLocator0 = new BezierLabelLocator(0.0, 0.0, 0.0);
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      Rectangle2D.Double rectangle2D_Double0 = labeledLineConnectionFigure0.getDrawingArea(0.0);
      Point2D.Double point2D_Double0 = bezierLabelLocator0.getRelativePoint(labeledLineConnectionFigure0);
      ellipseFigure0.setBounds(point2D_Double0, point2D_Double0);
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat("liner", "5eZpgPPx|4Uv+4", (String) null, (-2118));
      QuadTreeDrawing quadTreeDrawing0 = new QuadTreeDrawing();
      List<Figure> list0 = quadTreeDrawing0.findFigures(rectangle2D_Double0);
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, list0, (double) (-2118), false);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawFill(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.transformState);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(1.0, 1.0, 1.0, 0.0);
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      Rectangle2D.Double rectangle2D_Double0 = labeledLineConnectionFigure0.getDrawingArea(0.0);
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat("liner", "5eZpgPPx|4Uv+4", (String) null, (-2118));
      QuadTreeDrawing quadTreeDrawing0 = new QuadTreeDrawing();
      List<Figure> list0 = quadTreeDrawing0.findFigures(rectangle2D_Double0);
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, list0, (double) (-2118), false);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawFill(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat();
      QuadTreeDrawing quadTreeDrawing0 = new QuadTreeDrawing();
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) quadTreeDrawing0, (List<Figure>) null, 0.0, true);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawFill(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.transformState);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getDrawingArea();
      assertEquals((-1.5), rectangle2D_Double0.y, 0.01);
      assertEquals(3.0, rectangle2D_Double0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(1.0, 1.0, 1.0, 0.0);
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)ellipseFigure0.getTransformRestoreData();
      assertEquals(0.0, ellipse2D_Double0.height, 0.01);
      assertEquals(1.0, ellipse2D_Double0.getCenterY(), 0.01);
      assertEquals(2.0, ellipse2D_Double0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(1.0, 1.0, 1.0, 0.0);
      BezierLabelLocator bezierLabelLocator0 = new BezierLabelLocator(0.0, 0.0, 0.0);
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      Point2D.Double point2D_Double0 = bezierLabelLocator0.getRelativePoint(labeledLineConnectionFigure0);
      boolean boolean0 = ellipseFigure0.contains(point2D_Double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      AffineTransform affineTransform0 = new AffineTransform((-1.0), 0.0, 2944.3029864410405, 0.001, 0.0, 0.0);
      ellipseFigure0.transform(affineTransform0);
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getDrawingArea();
      assertEquals(3.1, rectangle2D_Double0.height, 0.01);
      assertEquals(3.1, rectangle2D_Double0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      ChopEllipseConnector chopEllipseConnector0 = (ChopEllipseConnector)ellipseFigure0.findConnector((Point2D.Double) null, labeledLineConnectionFigure0);
      assertFalse(chopEllipseConnector0.isConnectToDecorator());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(1.0, 1.0, 1.0, 0.0);
      BezierLabelLocator bezierLabelLocator0 = new BezierLabelLocator(0.0, 0.0, 0.0);
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      Point2D.Double point2D_Double0 = bezierLabelLocator0.getRelativePoint(labeledLineConnectionFigure0);
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      Connector connector0 = defaultDrawing0.findConnector(point2D_Double0, labeledLineConnectionFigure0);
      ChopEllipseConnector chopEllipseConnector0 = (ChopEllipseConnector)ellipseFigure0.findCompatibleConnector(connector0, true);
      assertFalse(chopEllipseConnector0.isConnectToDecorator());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipseFigure0.restoreTransformTo(ellipse2D_Double0);
      assertEquals(0.0, ellipse2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getBounds();
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
  }
}
